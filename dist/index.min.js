function __total_buffers_size(e){"use strict";if(e instanceof Buffer)return e.length;if("string"==typeof e)return 0;var r=0;for(var t in e)r+=__total_buffers_size(e[t]);return r}function __extract_buffers(e,r){"use strict";if(r instanceof Buffer){r.copy(e,e.cursor);var t={type:"__bufferify_placeholder__",offset:e.cursor,length:r.length};return e.cursor+=r.length,t}if("string"==typeof r)return r;for(var n in r)r[n]=__extract_buffers(e,r[n]);return r}function __insert_buffers(e,r){"use strict";if(r&&"__bufferify_placeholder__"===r.type){if(!Number.isInteger(r.offset)||!Number.isInteger(r.length))throw{code:4,description:"Placeholder corrupted.",url:""};if(e.length<r.offset+r.length)throw{code:5,description:"Placeholder references data beyond end of buffer.",url:""};var t=new Buffer(r.length);return e.copy(t,0,r.offset,r.offset+r.length),t}if("string"==typeof r)return r;for(var n in r)r[n]=__insert_buffers(e,r[n]);return r}function pack(e){"use strict";e=clone(e);var r=new Buffer(__total_buffers_size(e));r.cursor=0;var t=new Buffer(jsonpack.pack(__extract_buffers(r,e))),n=new Buffer(4+t.length+r.length);return n.writeUInt32LE(t.length),t.copy(n,4),r.copy(n,4+t.length),n=zlib.gzipSync(n)}function unpack(e){"use strict";try{e=zlib.gunzipSync(e)}catch(r){throw{code:0,description:"Gunzip failed.",url:""}}if(e.length<4)throw{code:1,description:"Buffer should be at least 4 bytes long.",url:""};var t=e.readUInt32LE();if(e.length<t+4)throw{code:2,description:"Meta data is shorter than declared.",url:""};var n;try{n=jsonpack.unpack(e.toString("utf8",4,4+t))}catch(r){throw{code:3,description:"Meta is corrupted.",url:""}}var f=new Buffer(e.length-t-4);return e.copy(f,0,4+t,e.length),__insert_buffers(f,n)}var jsonpack=require("jsonpack"),zlib=require("zlib"),clone=require("clone");module.exports={pack:pack,unpack:unpack};